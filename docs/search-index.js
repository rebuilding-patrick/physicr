crystal_doc_search_index_callback({"repository_name":"github.com/solidsmokesoftware/physicr","body":"# Physicr\n\nPhysicr is 2D physics system with a focus on simplicity written in Crystal.\n\nPhysicr is easy to use and intuitive, featuring a high level controller for managing the system.\n\nPhysicr is a *system* not an *engine*. It is powered by your game loop and fully under your control.\n\nPhysicr is object-oriented and highly extensible, utilizing callbacks for easy access for system functions.\n\nPhysicr is multiplayer ready. Being developed alongside a networked game, Physicr is intended to be used in online gaming.\n\n# Example\n```ruby\nrequire \"./controller\"\nrequire \"./body\"\nrequire \"./shape\"\n\n\nclass Player < Body\n  def initialize(id, position)\n    shape = Rect.new 32, 32\n    super id, position, shape\n    @name = \"Player\"\n    @speed = 100\n    @moving = true\n  end\nend\n\n\nclass Objects < Controller\n  def initalize(collision_area_size)\n    super collision_area_size\n    @factory[0] = Player.class\n  end\n      \n  def on_make(body)\n    puts \"Objects made #{body.name} #{body.id} at #{body.position.x}:#{body.position.y}\")\n  end\n      \n  def on_motion(body)\n    puts \"#{body.name} #{body.id} is at #{body.position.x}:#{body.position.y}\"\n  end\n\n  def on_collision(body, collisions)\n    put \"#{body.name} is colliding with #{collisions.size} others\"\n  end\n\nobjects = Objects 64\n\nplayerA = objects.make Player, 0, 0\nplayerB = objects.make 0, 10, 0\n\ncollision = objects.space.check playerA, playerB\nif collision\n   puts \"Bodies A and B are colliding\"\nend\n\nobjects.place playerA, 100, 0\nobjects.move playerB, 1, 0, 1\n\nobjects.turn playerA, 0, 1\nobjects.move playerA, 1\n\ncollision = objects.space.check playerA \nif collision\n   puts \"Body A is colliding with another body\"\nend\n\nobjects.delete playerA \nobjects.delete playerB\n\nplayerC = objects.make Player, 0, 0, dx=1 \nplayerD = objects.make Player, 0, 0, dx=-1 \nplayerE = objects.make Player, 0, 0, dy =1 \nplayerF = objects.make Player, 0, 0, dy =-1 \n\ncollisions = objects.space.get_body playerC\nif collisions\n   puts \"Body C is colliding with #{collisions.size} others\"\nend\n\n10.times do\n   objects.step 0.1\nend\n\n```\n\n# Documentation\n\nPhysicr's documentation is incomplete. See the documentation at pysics for a more indepth autodoc\n\nhttps://solidsmokesoftware.github.io/pysics/\n\n# Demonstration\n\nPhysicr's has a twin written in Python. To see the system in action, check out\n\nhttps://github.com/solidsmokesoftware/solconomy\n\n![solconomy](https://camo.githubusercontent.com/de20b3b2014d20a8746f7346e777e323586d5a35/68747470733a2f2f692e696d6775722e636f6d2f566277677664372e706e67)\n","program":{"html_id":"github.com/solidsmokesoftware/physicr/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/solidsmokesoftware/physicr","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/solidsmokesoftware/physicr/AbsBody","path":"AbsBody.html","kind":"class","full_name":"AbsBody","name":"AbsBody","abstract":false,"superclass":{"html_id":"github.com/solidsmokesoftware/physicr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/solidsmokesoftware/physicr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/solidsmokesoftware/physicr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"body.cr","line_number":6,"url":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/body.cr"}],"repository_name":"github.com/solidsmokesoftware/physicr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/solidsmokesoftware/physicr/Body","kind":"class","full_name":"Body","name":"Body"},{"html_id":"github.com/solidsmokesoftware/physicr/StaticBody","kind":"class","full_name":"StaticBody","name":"StaticBody"}],"including_types":[],"namespace":null,"doc":"The abstract base class for all bodies.\nBodies are physical entities that can interact with other bodies in space.","summary":"<p>The abstract base class for all bodies.</p>","class_methods":[],"constructors":[{"id":"new(id,x,y,shape)-class-method","html_id":"new(id,x,y,shape)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":""},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"args_string":"(id, x, y, shape)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/body.cr#L27","def":{"name":"new","args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":""},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(id, x, y, shape)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(id,position,shape)-class-method","html_id":"new(id,position,shape)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":""},{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"args_string":"(id, position, shape)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/body.cr#L18","def":{"name":"new","args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":""},{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(id, position, shape)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"area:Tuple(Int32,Int32)-instance-method","html_id":"area:Tuple(Int32,Int32)-instance-method","name":"area","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Tuple(Int32, Int32)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/body.cr#L12","def":{"name":"area","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Tuple(Int32, Int32)","visibility":"Public","body":"@area"}},{"id":"area=(area:Tuple(Int32,Int32))-instance-method","html_id":"area=(area:Tuple(Int32,Int32))-instance-method","name":"area=","doc":null,"summary":null,"abstract":false,"args":[{"name":"area","doc":null,"default_value":"","external_name":"area","restriction":"Tuple(Int32, Int32)"}],"args_string":"(area : Tuple(Int32, Int32))","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/body.cr#L12","def":{"name":"area=","args":[{"name":"area","doc":null,"default_value":"","external_name":"area","restriction":"Tuple(Int32, Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@area = area"}},{"id":"direction:Vector-instance-method","html_id":"direction:Vector-instance-method","name":"direction","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Vector","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/body.cr#L11","def":{"name":"direction","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vector","visibility":"Public","body":"@direction"}},{"id":"direction=(direction:Vector)-instance-method","html_id":"direction=(direction:Vector)-instance-method","name":"direction=","doc":null,"summary":null,"abstract":false,"args":[{"name":"direction","doc":null,"default_value":"","external_name":"direction","restriction":"Vector"}],"args_string":"(direction : Vector)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/body.cr#L11","def":{"name":"direction=","args":[{"name":"direction","doc":null,"default_value":"","external_name":"direction","restriction":"Vector"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@direction = direction"}},{"id":"id:Int32-instance-method","html_id":"id:Int32-instance-method","name":"id","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/body.cr#L7","def":{"name":"id","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@id"}},{"id":"id=(id:Int32)-instance-method","html_id":"id=(id:Int32)-instance-method","name":"id=","doc":null,"summary":null,"abstract":false,"args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"Int32"}],"args_string":"(id : Int32)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/body.cr#L7","def":{"name":"id=","args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@id = id"}},{"id":"key:Int32-instance-method","html_id":"key:Int32-instance-method","name":"key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/body.cr#L15","def":{"name":"key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@key"}},{"id":"key=(key:Int32)-instance-method","html_id":"key=(key:Int32)-instance-method","name":"key=","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"Int32"}],"args_string":"(key : Int32)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/body.cr#L15","def":{"name":"key=","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@key = key"}},{"id":"move(delta:Float64):Vector-instance-method","html_id":"move(delta:Float64):Vector-instance-method","name":"move","doc":"Advances a body by its *speed* in its *direction* over a duration of *delta*\nDo NOT use this directly to move a body, use *Controller.move(body, delta)* instead to manage spatial partitioning.","summary":"<p>Advances a body by its <em>speed</em> in its <em>direction</em> over a duration of <em>delta</em> Do NOT use this directly to move a body, use <em>Controller.move(body, delta)</em> instead to manage spatial partitioning.</p>","abstract":false,"args":[{"name":"delta","doc":null,"default_value":"","external_name":"delta","restriction":"Float64"}],"args_string":"(delta : Float64) : Vector","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/body.cr#L39","def":{"name":"move","args":[{"name":"delta","doc":null,"default_value":"","external_name":"delta","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vector","visibility":"Public","body":"move(@direction, delta)"}},{"id":"move(direction:Vector,delta:Float64):Vector-instance-method","html_id":"move(direction:Vector,delta:Float64):Vector-instance-method","name":"move","doc":"Advances a body by its *speed* in the given *direction* over a duration of *delta*\nDo NOT use this directly to move a body, use *Controller.move(body, delta)* instead to manage spatial partitioning.","summary":"<p>Advances a body by its <em>speed</em> in the given <em>direction</em> over a duration of <em>delta</em> Do NOT use this directly to move a body, use <em>Controller.move(body, delta)</em> instead to manage spatial partitioning.</p>","abstract":false,"args":[{"name":"direction","doc":null,"default_value":"","external_name":"direction","restriction":"Vector"},{"name":"delta","doc":null,"default_value":"","external_name":"delta","restriction":"Float64"}],"args_string":"(direction : Vector, delta : Float64) : Vector","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/body.cr#L45","def":{"name":"move","args":[{"name":"direction","doc":null,"default_value":"","external_name":"direction","restriction":"Vector"},{"name":"delta","doc":null,"default_value":"","external_name":"delta","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vector","visibility":"Public","body":"step = @speed * delta\nxstep = direction.x * step\nystep = direction.y * step\ndistance = Vector.new(xstep, ystep)\n@position = @position + distance\nreturn distance\n"}},{"id":"moving:Bool-instance-method","html_id":"moving:Bool-instance-method","name":"moving","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/body.cr#L16","def":{"name":"moving","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@moving"}},{"id":"moving=(moving:Bool)-instance-method","html_id":"moving=(moving:Bool)-instance-method","name":"moving=","doc":null,"summary":null,"abstract":false,"args":[{"name":"moving","doc":null,"default_value":"","external_name":"moving","restriction":"Bool"}],"args_string":"(moving : Bool)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/body.cr#L16","def":{"name":"moving=","args":[{"name":"moving","doc":null,"default_value":"","external_name":"moving","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@moving = moving"}},{"id":"name:String-instance-method","html_id":"name:String-instance-method","name":"name","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/body.cr#L14","def":{"name":"name","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@name"}},{"id":"name=(name:String)-instance-method","html_id":"name=(name:String)-instance-method","name":"name=","doc":null,"summary":null,"abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/body.cr#L14","def":{"name":"name=","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@name = name"}},{"id":"place(position:Vector)-instance-method","html_id":"place(position:Vector)-instance-method","name":"place","doc":"Directly set a body at a given *position*\nDo NOT use this directly to move a body, use *Controller.place(body, position)* instead.","summary":"<p>Directly set a body at a given <em>position</em> Do NOT use this directly to move a body, use <em>Controller.place(body, position)</em> instead.</p>","abstract":false,"args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Vector"}],"args_string":"(position : Vector)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/body.cr#L56","def":{"name":"place","args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Vector"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@position = position"}},{"id":"position:Vector-instance-method","html_id":"position:Vector-instance-method","name":"position","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Vector","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/body.cr#L8","def":{"name":"position","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Vector","visibility":"Public","body":"@position"}},{"id":"position=(position:Vector)-instance-method","html_id":"position=(position:Vector)-instance-method","name":"position=","doc":null,"summary":null,"abstract":false,"args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Vector"}],"args_string":"(position : Vector)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/body.cr#L8","def":{"name":"position=","args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Vector"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@position = position"}},{"id":"shape:Shape-instance-method","html_id":"shape:Shape-instance-method","name":"shape","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Shape","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/body.cr#L9","def":{"name":"shape","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Shape","visibility":"Public","body":"@shape"}},{"id":"shape=(shape:Shape)-instance-method","html_id":"shape=(shape:Shape)-instance-method","name":"shape=","doc":null,"summary":null,"abstract":false,"args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Shape"}],"args_string":"(shape : Shape)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/body.cr#L9","def":{"name":"shape=","args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Shape"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@shape = shape"}},{"id":"speed:Int32-instance-method","html_id":"speed:Int32-instance-method","name":"speed","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/body.cr#L13","def":{"name":"speed","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@speed"}},{"id":"speed=(speed:Int32)-instance-method","html_id":"speed=(speed:Int32)-instance-method","name":"speed=","doc":null,"summary":null,"abstract":false,"args":[{"name":"speed","doc":null,"default_value":"","external_name":"speed","restriction":"Int32"}],"args_string":"(speed : Int32)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/body.cr#L13","def":{"name":"speed=","args":[{"name":"speed","doc":null,"default_value":"","external_name":"speed","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@speed = speed"}}],"macros":[],"types":[]},{"html_id":"github.com/solidsmokesoftware/physicr/Body","path":"Body.html","kind":"class","full_name":"Body","name":"Body","abstract":false,"superclass":{"html_id":"github.com/solidsmokesoftware/physicr/AbsBody","kind":"class","full_name":"AbsBody","name":"AbsBody"},"ancestors":[{"html_id":"github.com/solidsmokesoftware/physicr/AbsBody","kind":"class","full_name":"AbsBody","name":"AbsBody"},{"html_id":"github.com/solidsmokesoftware/physicr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/solidsmokesoftware/physicr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"body.cr","line_number":62,"url":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/body.cr"}],"repository_name":"github.com/solidsmokesoftware/physicr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"A body used for processing and collisions. Extend Body for entities that move and think","summary":"<p>A body used for processing and collisions.</p>","class_methods":[],"constructors":[{"id":"new(id,position,shape)-class-method","html_id":"new(id,position,shape)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":""},{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"args_string":"(id, position, shape)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/body.cr#L63","def":{"name":"new","args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":""},{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(id, position, shape)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/solidsmokesoftware/physicr/Circle","path":"Circle.html","kind":"struct","full_name":"Circle","name":"Circle","abstract":false,"superclass":{"html_id":"github.com/solidsmokesoftware/physicr/Shape","kind":"struct","full_name":"Shape","name":"Shape"},"ancestors":[{"html_id":"github.com/solidsmokesoftware/physicr/Shape","kind":"struct","full_name":"Shape","name":"Shape"},{"html_id":"github.com/solidsmokesoftware/physicr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/solidsmokesoftware/physicr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/solidsmokesoftware/physicr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"shape.cr","line_number":19,"url":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/shape.cr"}],"repository_name":"github.com/solidsmokesoftware/physicr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"A Circle\nRadius, extending from the center of the circle","summary":"<p>A Circle Radius, extending from the center of the circle</p>","class_methods":[],"constructors":[{"id":"new(r)-class-method","html_id":"new(r)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":""}],"args_string":"(r)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/shape.cr#L22","def":{"name":"new","args":[{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(r)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"r:Int32-instance-method","html_id":"r:Int32-instance-method","name":"r","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/shape.cr#L20","def":{"name":"r","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@r"}},{"id":"r=(r:Int32)-instance-method","html_id":"r=(r:Int32)-instance-method","name":"r=","doc":null,"summary":null,"abstract":false,"args":[{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":"Int32"}],"args_string":"(r : Int32)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/shape.cr#L20","def":{"name":"r=","args":[{"name":"r","doc":null,"default_value":"","external_name":"r","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@r = r"}}],"macros":[],"types":[]},{"html_id":"github.com/solidsmokesoftware/physicr/Clock","path":"Clock.html","kind":"class","full_name":"Clock","name":"Clock","abstract":false,"superclass":{"html_id":"github.com/solidsmokesoftware/physicr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/solidsmokesoftware/physicr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/solidsmokesoftware/physicr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clock.cr","line_number":51,"url":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/clock.cr"}],"repository_name":"github.com/solidsmokesoftware/physicr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Keeps track of time and handles ticking","summary":"<p>Keeps track of time and handles ticking</p>","class_methods":[],"constructors":[{"id":"new(rate:Int64)-class-method","html_id":"new(rate:Int64)-class-method","name":"new","doc":"MS scale; 1000 = aprox 1 second","summary":"<p>MS scale; 1000 = aprox 1 second</p>","abstract":false,"args":[{"name":"rate","doc":null,"default_value":"","external_name":"rate","restriction":"Int64"}],"args_string":"(rate : Int64)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/clock.cr#L61","def":{"name":"new","args":[{"name":"rate","doc":null,"default_value":"","external_name":"rate","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(rate)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(rate:Int32)-class-method","html_id":"new(rate:Int32)-class-method","name":"new","doc":"MS scale; 1000 = aprox 1 second","summary":"<p>MS scale; 1000 = aprox 1 second</p>","abstract":false,"args":[{"name":"rate","doc":null,"default_value":"","external_name":"rate","restriction":"Int32"}],"args_string":"(rate : Int32)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/clock.cr#L69","def":{"name":"new","args":[{"name":"rate","doc":null,"default_value":"","external_name":"rate","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(rate)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(rate:Float64)-class-method","html_id":"new(rate:Float64)-class-method","name":"new","doc":"Second scale; 1 = aprox 1 second","summary":"<p>Second scale; 1 = aprox 1 second</p>","abstract":false,"args":[{"name":"rate","doc":null,"default_value":"","external_name":"rate","restriction":"Float64"}],"args_string":"(rate : Float64)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/clock.cr#L77","def":{"name":"new","args":[{"name":"rate","doc":null,"default_value":"","external_name":"rate","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(rate)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(rate:Float32)-class-method","html_id":"new(rate:Float32)-class-method","name":"new","doc":"Second scale; 1 = aprox 1 second","summary":"<p>Second scale; 1 = aprox 1 second</p>","abstract":false,"args":[{"name":"rate","doc":null,"default_value":"","external_name":"rate","restriction":"Float32"}],"args_string":"(rate : Float32)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/clock.cr#L85","def":{"name":"new","args":[{"name":"rate","doc":null,"default_value":"","external_name":"rate","restriction":"Float32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(rate)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"calibrate-instance-method","html_id":"calibrate-instance-method","name":"calibrate","doc":"Not implemented","summary":"<p>Not implemented</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/clock.cr#L93","def":{"name":"calibrate","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"rate:Int64-instance-method","html_id":"rate:Int64-instance-method","name":"rate","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/clock.cr#L53","def":{"name":"rate","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@rate"}},{"id":"rate=(rate:Int64)-instance-method","html_id":"rate=(rate:Int64)-instance-method","name":"rate=","doc":null,"summary":null,"abstract":false,"args":[{"name":"rate","doc":null,"default_value":"","external_name":"rate","restriction":"Int64"}],"args_string":"(rate : Int64)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/clock.cr#L53","def":{"name":"rate=","args":[{"name":"rate","doc":null,"default_value":"","external_name":"rate","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@rate = rate"}},{"id":"tick:Float64-instance-method","html_id":"tick:Float64-instance-method","name":"tick","doc":"Attemps to advance the system clock. Returns delta if time changes, 0 if not\nDelta is the ratio of time that has passed since the tick. For example if your tick rate is 100ms, and your tick happens 150ms\nafter your last tick, your delta will be 1.5\nYou probably are going to want to use this one for timing in games","summary":"<p>Attemps to advance the system clock.</p>","abstract":false,"args":[],"args_string":" : Float64","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/clock.cr#L101","def":{"name":"tick","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float64","visibility":"Public","body":"@value = @value + @ticker.get\nif @value > @rate\n  delta = (@value / @rate).to_f64\n  @value = 0_i64\n  @time = @time + 1\n  return delta\nelse\n  return 0_f64\nend\n"}},{"id":"tick_check:Bool-instance-method","html_id":"tick_check:Bool-instance-method","name":"tick_check","doc":"Attemps to advance the system clock. Returns True if time changes, False if not","summary":"<p>Attemps to advance the system clock.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/clock.cr#L125","def":{"name":"tick_check","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@value = @value + @ticker.get\nif @value > @rate\n  @value = 0_i64\n  @time = @time + 1\n  return true\nelse\n  return false\nend\n"}},{"id":"tick_time:Int64-instance-method","html_id":"tick_time:Int64-instance-method","name":"tick_time","doc":"Attemps to advance the system clock. Returns the current system time","summary":"<p>Attemps to advance the system clock.</p>","abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/clock.cr#L114","def":{"name":"tick_time","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"value = @ticker.get\n@value = @value + value\nif @value > @rate\n  @value = 0_i64\n  @time = @time + 1\nend\nreturn value\n"}},{"id":"ticker:Ticker-instance-method","html_id":"ticker:Ticker-instance-method","name":"ticker","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Ticker","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/clock.cr#L52","def":{"name":"ticker","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Ticker","visibility":"Public","body":"@ticker"}},{"id":"ticker=(ticker:Ticker)-instance-method","html_id":"ticker=(ticker:Ticker)-instance-method","name":"ticker=","doc":null,"summary":null,"abstract":false,"args":[{"name":"ticker","doc":null,"default_value":"","external_name":"ticker","restriction":"Ticker"}],"args_string":"(ticker : Ticker)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/clock.cr#L52","def":{"name":"ticker=","args":[{"name":"ticker","doc":null,"default_value":"","external_name":"ticker","restriction":"Ticker"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@ticker = ticker"}},{"id":"time:Int64-instance-method","html_id":"time:Int64-instance-method","name":"time","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/clock.cr#L55","def":{"name":"time","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@time"}},{"id":"time=(time:Int64)-instance-method","html_id":"time=(time:Int64)-instance-method","name":"time=","doc":null,"summary":null,"abstract":false,"args":[{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"Int64"}],"args_string":"(time : Int64)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/clock.cr#L55","def":{"name":"time=","args":[{"name":"time","doc":null,"default_value":"","external_name":"time","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@time = time"}},{"id":"value:Int64-instance-method","html_id":"value:Int64-instance-method","name":"value","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/clock.cr#L54","def":{"name":"value","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"@value"}},{"id":"value=(value:Int64)-instance-method","html_id":"value=(value:Int64)-instance-method","name":"value=","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int64"}],"args_string":"(value : Int64)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/clock.cr#L54","def":{"name":"value=","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@value = value"}}],"macros":[],"types":[]},{"html_id":"github.com/solidsmokesoftware/physicr/Collider","path":"Collider.html","kind":"class","full_name":"Collider","name":"Collider","abstract":false,"superclass":{"html_id":"github.com/solidsmokesoftware/physicr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/solidsmokesoftware/physicr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/solidsmokesoftware/physicr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"collider.cr","line_number":6,"url":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/collider.cr"}],"repository_name":"github.com/solidsmokesoftware/physicr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Collider handles collisions two shapes at two given positions. Positions are Vectors\nNote that the collider is abstract, dealing with any set of shapes and positions, rather than in-game physical bodies.","summary":"<p>Collider handles collisions two shapes at two given positions.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"check(shape:Rect,pos:Vector,shape_other:Rect,pos_other:Vector):Bool-instance-method","html_id":"check(shape:Rect,pos:Vector,shape_other:Rect,pos_other:Vector):Bool-instance-method","name":"check","doc":"Tests for a collision between two *Rect*","summary":"<p>Tests for a collision between two <em>Rect</em></p>","abstract":false,"args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Rect"},{"name":"pos","doc":null,"default_value":"","external_name":"pos","restriction":"Vector"},{"name":"shape_other","doc":null,"default_value":"","external_name":"shape_other","restriction":"Rect"},{"name":"pos_other","doc":null,"default_value":"","external_name":"pos_other","restriction":"Vector"}],"args_string":"(shape : Rect, pos : Vector, shape_other : Rect, pos_other : Vector) : Bool","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/collider.cr#L8","def":{"name":"check","args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Rect"},{"name":"pos","doc":null,"default_value":"","external_name":"pos","restriction":"Vector"},{"name":"shape_other","doc":null,"default_value":"","external_name":"shape_other","restriction":"Rect"},{"name":"pos_other","doc":null,"default_value":"","external_name":"pos_other","restriction":"Vector"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"if ((pos.x < (pos_other.x + shape_other.w) && (pos.x + shape.w) > pos_other.x) && pos.y < (pos_other.y + shape_other.h)) && (pos.y + shape.h) > pos_other.y\n  return true\nelse\n  return false\nend"}},{"id":"check(shape:Rect,pos:Vector,shape_other:Circle,pos_other:Vector):Bool-instance-method","html_id":"check(shape:Rect,pos:Vector,shape_other:Circle,pos_other:Vector):Bool-instance-method","name":"check","doc":"Test for a collision between a *Rect* and a *Circle*","summary":"<p>Test for a collision between a <em>Rect</em> and a <em>Circle</em></p>","abstract":false,"args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Rect"},{"name":"pos","doc":null,"default_value":"","external_name":"pos","restriction":"Vector"},{"name":"shape_other","doc":null,"default_value":"","external_name":"shape_other","restriction":"Circle"},{"name":"pos_other","doc":null,"default_value":"","external_name":"pos_other","restriction":"Vector"}],"args_string":"(shape : Rect, pos : Vector, shape_other : Circle, pos_other : Vector) : Bool","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/collider.cr#L22","def":{"name":"check","args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Rect"},{"name":"pos","doc":null,"default_value":"","external_name":"pos","restriction":"Vector"},{"name":"shape_other","doc":null,"default_value":"","external_name":"shape_other","restriction":"Circle"},{"name":"pos_other","doc":null,"default_value":"","external_name":"pos_other","restriction":"Vector"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"if pos_other.x < pos.x\n  x = pos.x\nelse\n  if pos_other.x > (pos.x + shape.w)\n    x = pos.x + shape.w\n  else\n    x = pos_other.x\n  end\nend\nif pos_other.y < pos.y\n  y = pos.y\nelse\n  if pos_other.y > (pos.y + shape.h)\n    y = pos.y + shape.h\n  else\n    y = pos_other.y\n  end\nend\ndx = x - pos_other.x\ndy = y - pos_other.y\nif ((dx * dx) + (dy * dy)) < (shape_other.r * shape_other.r)\n  return true\nelse\n  return false\nend\n"}},{"id":"check(shape:Circle,pos:Vector,shape_other:Rect,pos_other:Vector):Bool-instance-method","html_id":"check(shape:Circle,pos:Vector,shape_other:Rect,pos_other:Vector):Bool-instance-method","name":"check","doc":"Test for a collision between a *Circle* and a *Rect*","summary":"<p>Test for a collision between a <em>Circle</em> and a <em>Rect</em></p>","abstract":false,"args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Circle"},{"name":"pos","doc":null,"default_value":"","external_name":"pos","restriction":"Vector"},{"name":"shape_other","doc":null,"default_value":"","external_name":"shape_other","restriction":"Rect"},{"name":"pos_other","doc":null,"default_value":"","external_name":"pos_other","restriction":"Vector"}],"args_string":"(shape : Circle, pos : Vector, shape_other : Rect, pos_other : Vector) : Bool","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/collider.cr#L53","def":{"name":"check","args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Circle"},{"name":"pos","doc":null,"default_value":"","external_name":"pos","restriction":"Vector"},{"name":"shape_other","doc":null,"default_value":"","external_name":"shape_other","restriction":"Rect"},{"name":"pos_other","doc":null,"default_value":"","external_name":"pos_other","restriction":"Vector"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"return check(shape_other, pos_other, shape, pos)"}},{"id":"check(shape:Circle,pos:Vector,shape_other:Circle,pos_other:Vector):Bool-instance-method","html_id":"check(shape:Circle,pos:Vector,shape_other:Circle,pos_other:Vector):Bool-instance-method","name":"check","doc":"Test for a collision between two *Circle*","summary":"<p>Test for a collision between two <em>Circle</em></p>","abstract":false,"args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Circle"},{"name":"pos","doc":null,"default_value":"","external_name":"pos","restriction":"Vector"},{"name":"shape_other","doc":null,"default_value":"","external_name":"shape_other","restriction":"Circle"},{"name":"pos_other","doc":null,"default_value":"","external_name":"pos_other","restriction":"Vector"}],"args_string":"(shape : Circle, pos : Vector, shape_other : Circle, pos_other : Vector) : Bool","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/collider.cr#L58","def":{"name":"check","args":[{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Circle"},{"name":"pos","doc":null,"default_value":"","external_name":"pos","restriction":"Vector"},{"name":"shape_other","doc":null,"default_value":"","external_name":"shape_other","restriction":"Circle"},{"name":"pos_other","doc":null,"default_value":"","external_name":"pos_other","restriction":"Vector"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"dx = pos.x - pos_other.x\ndy = pos.y - pos_other.y\nrs = shape.r + shape_other.r\nif ((dx * dx) + (dy * dy)) < (rs * rs)\n  return true\nelse\n  return false\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/solidsmokesoftware/physicr/Controller","path":"Controller.html","kind":"class","full_name":"Controller","name":"Controller","abstract":false,"superclass":{"html_id":"github.com/solidsmokesoftware/physicr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/solidsmokesoftware/physicr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/solidsmokesoftware/physicr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"controller.cr","line_number":5,"url":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr"}],"repository_name":"github.com/solidsmokesoftware/physicr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"High-level manager of the physics system","summary":"<p>High-level manager of the physics system</p>","class_methods":[],"constructors":[{"id":"new(size)-class-method","html_id":"new(size)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"args_string":"(size)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L14","def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"actives:Array(Body)-instance-method","html_id":"actives:Array(Body)-instance-method","name":"actives","doc":"All objects in the space","summary":"<p>All objects in the space</p>","abstract":false,"args":[],"args_string":" : Array(Body)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L9","def":{"name":"actives","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Body)","visibility":"Public","body":"@actives"}},{"id":"actives=(actives:Array(Body))-instance-method","html_id":"actives=(actives:Array(Body))-instance-method","name":"actives=","doc":"All objects in the space","summary":"<p>All objects in the space</p>","abstract":false,"args":[{"name":"actives","doc":null,"default_value":"","external_name":"actives","restriction":"Array(Body)"}],"args_string":"(actives : Array(Body))","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L9","def":{"name":"actives=","args":[{"name":"actives","doc":null,"default_value":"","external_name":"actives","restriction":"Array(Body)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@actives = actives"}},{"id":"add(body:AbsBody)-instance-method","html_id":"add(body:AbsBody)-instance-method","name":"add","doc":"Adds a body to the system.\nAll bodies are tracked by id in list\nAll bodies are tracked by area in space\nBodies(Not StaticBodies) are added to a list of active bodies","summary":"<p>Adds a body to the system.</p>","abstract":false,"args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"}],"args_string":"(body : AbsBody)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L59","def":{"name":"add","args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@list[body.id] = body\nbody.area = @space.pos_to_area(body.position.x, body.position.y)\n@space.add(body, body.area)\nif body.is_a?(Body)\n  @actives << body\nend\non_add(body)\n"}},{"id":"delete(body)-instance-method","html_id":"delete(body)-instance-method","name":"delete","doc":"Removes a body from the system.\nWhatever the body was added to on add is cleaned up here.","summary":"<p>Removes a body from the system.</p>","abstract":false,"args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":""}],"args_string":"(body)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L75","def":{"name":"delete","args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@list.delete(body)\n@space.delete(body, body.area)\nif body.is_a?(Body)\n  @actives.delete(body)\nend\non_delete(body)\n"}},{"id":"factory:Hash(Int32,AbsBody.class)-instance-method","html_id":"factory:Hash(Int32,AbsBody.class)-instance-method","name":"factory","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(Int32, <span class=\"t\">AbsBody</span>.<span class=\"k\">class</span>)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L7","def":{"name":"factory","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(Int32, AbsBody.class)","visibility":"Public","body":"@factory"}},{"id":"factory=(factory:Hash(Int32,AbsBody.class))-instance-method","html_id":"factory=(factory:Hash(Int32,AbsBody.class))-instance-method","name":"factory=","doc":null,"summary":null,"abstract":false,"args":[{"name":"factory","doc":null,"default_value":"","external_name":"factory","restriction":"Hash(Int32, AbsBody.class)"}],"args_string":"(factory : Hash(Int32, <span class=\"t\">AbsBody</span>.<span class=\"k\">class</span>))","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L7","def":{"name":"factory=","args":[{"name":"factory","doc":null,"default_value":"","external_name":"factory","restriction":"Hash(Int32, AbsBody.class)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@factory = factory"}},{"id":"find(x,y)-instance-method","html_id":"find(x,y)-instance-method","name":"find","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""}],"args_string":"(x, y)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L197","def":{"name":"find","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"pos = Vector.new(x, y)\nreturn find(pos)\n"}},{"id":"find(pos:Vector)-instance-method","html_id":"find(pos:Vector)-instance-method","name":"find","doc":"Gets a body in the space at x, y\nUses a 1x1 pointer rect to test for collisions.","summary":"<p>Gets a body in the space at x, y Uses a 1x1 pointer rect to test for collisions.</p>","abstract":false,"args":[{"name":"pos","doc":null,"default_value":"","external_name":"pos","restriction":"Vector"}],"args_string":"(pos : Vector)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L187","def":{"name":"find","args":[{"name":"pos","doc":null,"default_value":"","external_name":"pos","restriction":"Vector"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"area = @space.pos_to_area(pos)\n(@space.get(area)).each do |other|\n  if @space.collider.check(@pointer, pos, other.shape, other.position)\n    return body\n  end\nend\nreturn nil\n"}},{"id":"get(id:Int32)-instance-method","html_id":"get(id:Int32)-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"Int32"}],"args_string":"(id : Int32)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L202","def":{"name":"get","args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @list.has_key?(id)\n  return @list[id]\nelse\n  return nil\nend"}},{"id":"index:Index-instance-method","html_id":"index:Index-instance-method","name":"index","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Index","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L6","def":{"name":"index","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Index","visibility":"Public","body":"@index"}},{"id":"index=(index:Index)-instance-method","html_id":"index=(index:Index)-instance-method","name":"index=","doc":null,"summary":null,"abstract":false,"args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Index"}],"args_string":"(index : Index)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L6","def":{"name":"index=","args":[{"name":"index","doc":null,"default_value":"","external_name":"index","restriction":"Index"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@index = index"}},{"id":"list:Hash(Int32,AbsBody)-instance-method","html_id":"list:Hash(Int32,AbsBody)-instance-method","name":"list","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(Int32, AbsBody)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L8","def":{"name":"list","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(Int32, AbsBody)","visibility":"Public","body":"@list"}},{"id":"list=(list:Hash(Int32,AbsBody))-instance-method","html_id":"list=(list:Hash(Int32,AbsBody))-instance-method","name":"list=","doc":null,"summary":null,"abstract":false,"args":[{"name":"list","doc":null,"default_value":"","external_name":"list","restriction":"Hash(Int32, AbsBody)"}],"args_string":"(list : Hash(Int32, AbsBody))","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L8","def":{"name":"list=","args":[{"name":"list","doc":null,"default_value":"","external_name":"list","restriction":"Hash(Int32, AbsBody)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@list = list"}},{"id":"make(type:AbsBody.class,id,position,direction=Vector.new(0,0))-instance-method","html_id":"make(type:AbsBody.class,id,position,direction=Vector.new(0,0))-instance-method","name":"make","doc":"Produces a body of type from the factory at position x, y\nIf an id is not assigned during make, one will be generated. This is needed for syncing objects across clients and server\nAfter a body is made, it is automatically added to the system.","summary":"<p>Produces a body of type from the factory at position x, y If an id is not assigned during make, one will be generated.</p>","abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"AbsBody.class"},{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":""},{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":""},{"name":"direction","doc":null,"default_value":"Vector.new(0, 0)","external_name":"direction","restriction":""}],"args_string":"(type : <span class=\"t\">AbsBody</span>.<span class=\"k\">class</span>, id, position, direction = <span class=\"t\">Vector</span>.<span class=\"k\">new</span>(<span class=\"n\">0</span>, <span class=\"n\">0</span>))","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L27","def":{"name":"make","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"AbsBody.class"},{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":""},{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":""},{"name":"direction","doc":null,"default_value":"Vector.new(0, 0)","external_name":"direction","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"body = type.new(id, position)\nbody.direction = direction\non_make(body)\nadd(body)\nreturn body\n"}},{"id":"make(key,id,position)-instance-method","html_id":"make(key,id,position)-instance-method","name":"make","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""},{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":""},{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":""}],"args_string":"(key, id, position)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L46","def":{"name":"make","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""},{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":""},{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"type = @factory[key]\nreturn make(type, id, position)\n"}},{"id":"make(type:AbsBody.class,position)-instance-method","html_id":"make(type:AbsBody.class,position)-instance-method","name":"make","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"AbsBody.class"},{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":""}],"args_string":"(type : <span class=\"t\">AbsBody</span>.<span class=\"k\">class</span>, position)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L35","def":{"name":"make","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"AbsBody.class"},{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"id = @index.get\nreturn make(type, id, position)\n"}},{"id":"make(key,position)-instance-method","html_id":"make(key,position)-instance-method","name":"make","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""},{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":""}],"args_string":"(key, position)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L40","def":{"name":"make","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":""},{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"type = @factory[key]\nid = @index.get\nreturn make(type, id, position)\n"}},{"id":"move(body:AbsBody,delta)-instance-method","html_id":"move(body:AbsBody,delta)-instance-method","name":"move","doc":"Move a body by it's speed and direction for delta duration.\nUse this instead of body.move(delta) to keep track of collision area","summary":"<p>Move a body by it's speed and direction for delta duration.</p>","abstract":false,"args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"},{"name":"delta","doc":null,"default_value":"","external_name":"delta","restriction":""}],"args_string":"(body : AbsBody, delta)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L105","def":{"name":"move","args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"},{"name":"delta","doc":null,"default_value":"","external_name":"delta","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"body.move(delta)\nupdate_area(body)\non_move(body)\non_motion(body)\n"}},{"id":"move(body:AbsBody,direction:Vector,delta)-instance-method","html_id":"move(body:AbsBody,direction:Vector,delta)-instance-method","name":"move","doc":"Move a body by it's speed in the direction of x, y for delta duration.\nUse this instead of body.move(x, y, delta) to keep track of collision area","summary":"<p>Move a body by it's speed in the direction of x, y for delta duration.</p>","abstract":false,"args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"},{"name":"direction","doc":null,"default_value":"","external_name":"direction","restriction":"Vector"},{"name":"delta","doc":null,"default_value":"","external_name":"delta","restriction":""}],"args_string":"(body : AbsBody, direction : Vector, delta)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L114","def":{"name":"move","args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"},{"name":"direction","doc":null,"default_value":"","external_name":"direction","restriction":"Vector"},{"name":"delta","doc":null,"default_value":"","external_name":"delta","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"body.move(direction, delta)\nupdate_area(body)\non_move(body)\non_motion(body)\n"}},{"id":"move(body:AbsBody,x,y,delta)-instance-method","html_id":"move(body:AbsBody,x,y,delta)-instance-method","name":"move","doc":null,"summary":null,"abstract":false,"args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""},{"name":"delta","doc":null,"default_value":"","external_name":"delta","restriction":""}],"args_string":"(body : AbsBody, x, y, delta)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L121","def":{"name":"move","args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""},{"name":"delta","doc":null,"default_value":"","external_name":"delta","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"direction = Vector.new(x, y)\nmove(body, direction, delta)\n"}},{"id":"moving(body:AbsBody)-instance-method","html_id":"moving(body:AbsBody)-instance-method","name":"moving","doc":"Tells a body to move when the system is processed.","summary":"<p>Tells a body to move when the system is processed.</p>","abstract":false,"args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"}],"args_string":"(body : AbsBody)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L166","def":{"name":"moving","args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"body.moving = true\non_moving(body)\n"}},{"id":"on_add(body:AbsBody)-instance-method","html_id":"on_add(body:AbsBody)-instance-method","name":"on_add","doc":"Callback whenever bodies are added to the system","summary":"<p>Callback whenever bodies are added to the system</p>","abstract":false,"args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"}],"args_string":"(body : AbsBody)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L70","def":{"name":"on_add","args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"on_area(body:AbsBody)-instance-method","html_id":"on_area(body:AbsBody)-instance-method","name":"on_area","doc":"Callback whenever bodies have their area changed by the system","summary":"<p>Callback whenever bodies have their area changed by the system</p>","abstract":false,"args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"}],"args_string":"(body : AbsBody)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L100","def":{"name":"on_area","args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"on_collision(body:AbsBody,collisions:Array(AbsBody))-instance-method","html_id":"on_collision(body:AbsBody,collisions:Array(AbsBody))-instance-method","name":"on_collision","doc":"Callback whenever bodies collide with another body","summary":"<p>Callback whenever bodies collide with another body</p>","abstract":false,"args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"},{"name":"collisions","doc":null,"default_value":"","external_name":"collisions","restriction":"Array(AbsBody)"}],"args_string":"(body : AbsBody, collisions : Array(AbsBody))","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L241","def":{"name":"on_collision","args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"},{"name":"collisions","doc":null,"default_value":"","external_name":"collisions","restriction":"Array(AbsBody)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"on_delete(body:AbsBody)-instance-method","html_id":"on_delete(body:AbsBody)-instance-method","name":"on_delete","doc":"Callback whenever bodies are removed from the system","summary":"<p>Callback whenever bodies are removed from the system</p>","abstract":false,"args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"}],"args_string":"(body : AbsBody)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L85","def":{"name":"on_delete","args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"on_make(body:AbsBody)-instance-method","html_id":"on_make(body:AbsBody)-instance-method","name":"on_make","doc":"Callback whenever bodies are made by the system","summary":"<p>Callback whenever bodies are made by the system</p>","abstract":false,"args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"}],"args_string":"(body : AbsBody)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L52","def":{"name":"on_make","args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"on_motion(body:AbsBody)-instance-method","html_id":"on_motion(body:AbsBody)-instance-method","name":"on_motion","doc":"Callback whenever bodies have thier position changed by the system","summary":"<p>Callback whenever bodies have thier position changed by the system</p>","abstract":false,"args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"}],"args_string":"(body : AbsBody)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L149","def":{"name":"on_motion","args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"on_move(body:AbsBody,distance:Vector)-instance-method","html_id":"on_move(body:AbsBody,distance:Vector)-instance-method","name":"on_move","doc":"Callback whenever bodies are moved by the system","summary":"<p>Callback whenever bodies are moved by the system</p>","abstract":false,"args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"},{"name":"distance","doc":null,"default_value":"","external_name":"distance","restriction":"Vector"}],"args_string":"(body : AbsBody, distance : Vector)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L127","def":{"name":"on_move","args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"},{"name":"distance","doc":null,"default_value":"","external_name":"distance","restriction":"Vector"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"on_moving(body:AbsBody)-instance-method","html_id":"on_moving(body:AbsBody)-instance-method","name":"on_moving","doc":"Callback for when a body starts moving","summary":"<p>Callback for when a body starts moving</p>","abstract":false,"args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"}],"args_string":"(body : AbsBody)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L172","def":{"name":"on_moving","args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"on_place(body:AbsBody)-instance-method","html_id":"on_place(body:AbsBody)-instance-method","name":"on_place","doc":"Callback whenever bodies are placed by the system","summary":"<p>Callback whenever bodies are placed by the system</p>","abstract":false,"args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"}],"args_string":"(body : AbsBody)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L145","def":{"name":"on_place","args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"on_step(body:AbsBody,delta)-instance-method","html_id":"on_step(body:AbsBody,delta)-instance-method","name":"on_step","doc":"Callback when the simulation takes a step over a body. Override this when extending your Controller","summary":"<p>Callback when the simulation takes a step over a body.</p>","abstract":false,"args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"},{"name":"delta","doc":null,"default_value":"","external_name":"delta","restriction":""}],"args_string":"(body : AbsBody, delta)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L237","def":{"name":"on_step","args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"},{"name":"delta","doc":null,"default_value":"","external_name":"delta","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"on_step_end(delta)-instance-method","html_id":"on_step_end(delta)-instance-method","name":"on_step_end","doc":"Callback after the simulation takes a step. Override this when extending your Controller","summary":"<p>Callback after the simulation takes a step.</p>","abstract":false,"args":[{"name":"delta","doc":null,"default_value":"","external_name":"delta","restriction":""}],"args_string":"(delta)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L245","def":{"name":"on_step_end","args":[{"name":"delta","doc":null,"default_value":"","external_name":"delta","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"on_step_start(delta)-instance-method","html_id":"on_step_start(delta)-instance-method","name":"on_step_start","doc":"Callback before the simulation takes a step. Override this when extending your Controller","summary":"<p>Callback before the simulation takes a step.</p>","abstract":false,"args":[{"name":"delta","doc":null,"default_value":"","external_name":"delta","restriction":""}],"args_string":"(delta)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L233","def":{"name":"on_step_start","args":[{"name":"delta","doc":null,"default_value":"","external_name":"delta","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"on_stop(body:AbsBody)-instance-method","html_id":"on_stop(body:AbsBody)-instance-method","name":"on_stop","doc":"Callback for when a body stops moving","summary":"<p>Callback for when a body stops moving</p>","abstract":false,"args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"}],"args_string":"(body : AbsBody)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L182","def":{"name":"on_stop","args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"on_turn(body:AbsBody)-instance-method","html_id":"on_turn(body:AbsBody)-instance-method","name":"on_turn","doc":"Callback for when a body changes direction","summary":"<p>Callback for when a body changes direction</p>","abstract":false,"args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"}],"args_string":"(body : AbsBody)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L162","def":{"name":"on_turn","args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"place(body:AbsBody,position:Vector)-instance-method","html_id":"place(body:AbsBody,position:Vector)-instance-method","name":"place","doc":null,"summary":null,"abstract":false,"args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"},{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Vector"}],"args_string":"(body : AbsBody, position : Vector)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L137","def":{"name":"place","args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"},{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Vector"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"body.position = position\nupdate_area(body)\non_place(body)\non_motion(body)\n"}},{"id":"place(body:AbsBody,x,y)-instance-method","html_id":"place(body:AbsBody,x,y)-instance-method","name":"place","doc":"Directly place a body at x, y\nUse this instead of body.place(x, y) to keep track of collision area","summary":"<p>Directly place a body at x, y Use this instead of body.place(x, y) to keep track of collision area</p>","abstract":false,"args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""}],"args_string":"(body : AbsBody, x, y)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L132","def":{"name":"place","args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"position = Vector.new(x, y)\nplace(body, position)\n"}},{"id":"pointer:Rect-instance-method","html_id":"pointer:Rect-instance-method","name":"pointer","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Rect","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L12","def":{"name":"pointer","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Rect","visibility":"Public","body":"@pointer"}},{"id":"pointer=(pointer:Rect)-instance-method","html_id":"pointer=(pointer:Rect)-instance-method","name":"pointer=","doc":null,"summary":null,"abstract":false,"args":[{"name":"pointer","doc":null,"default_value":"","external_name":"pointer","restriction":"Rect"}],"args_string":"(pointer : Rect)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L12","def":{"name":"pointer=","args":[{"name":"pointer","doc":null,"default_value":"","external_name":"pointer","restriction":"Rect"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@pointer = pointer"}},{"id":"space:Space-instance-method","html_id":"space:Space-instance-method","name":"space","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Space","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L10","def":{"name":"space","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Space","visibility":"Public","body":"@space"}},{"id":"space=(space:Space)-instance-method","html_id":"space=(space:Space)-instance-method","name":"space=","doc":null,"summary":null,"abstract":false,"args":[{"name":"space","doc":null,"default_value":"","external_name":"space","restriction":"Space"}],"args_string":"(space : Space)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L10","def":{"name":"space=","args":[{"name":"space","doc":null,"default_value":"","external_name":"space","restriction":"Space"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@space = space"}},{"id":"step(delta)-instance-method","html_id":"step(delta)-instance-method","name":"step","doc":"Advances the simulation by delta steps","summary":"<p>Advances the simulation by delta steps</p>","abstract":false,"args":[{"name":"delta","doc":null,"default_value":"","external_name":"delta","restriction":""}],"args_string":"(delta)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L212","def":{"name":"step","args":[{"name":"delta","doc":null,"default_value":"","external_name":"delta","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"on_step_start(delta)\n@actives.each do |body|\n  on_step(body, delta)\n  if body.moving\n    move(body, delta)\n  end\nend\n@actives.each do |body|\n  if body.moving\n    if self.space.check(body)\n      on_collision(body)\n    end\n  end\nend\non_step_end(delta)\n"}},{"id":"stop(body:AbsBody)-instance-method","html_id":"stop(body:AbsBody)-instance-method","name":"stop","doc":"Tells a body to not move when the system is proccessed.","summary":"<p>Tells a body to not move when the system is proccessed.</p>","abstract":false,"args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"}],"args_string":"(body : AbsBody)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L176","def":{"name":"stop","args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"body.moving = false\non_stop(body)\n"}},{"id":"turn(body:AbsBody,direction:Vector)-instance-method","html_id":"turn(body:AbsBody,direction:Vector)-instance-method","name":"turn","doc":null,"summary":null,"abstract":false,"args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"},{"name":"direction","doc":null,"default_value":"","external_name":"direction","restriction":"Vector"}],"args_string":"(body : AbsBody, direction : Vector)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L156","def":{"name":"turn","args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"},{"name":"direction","doc":null,"default_value":"","external_name":"direction","restriction":"Vector"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"body.direction = direction\non_turn(body)\n"}},{"id":"turn(body:AbsBody,x,y)-instance-method","html_id":"turn(body:AbsBody,x,y)-instance-method","name":"turn","doc":null,"summary":null,"abstract":false,"args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""}],"args_string":"(body : AbsBody, x, y)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L152","def":{"name":"turn","args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":""},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"turn(body, Vector.new(x, y))"}},{"id":"update_area(body:AbsBody)-instance-method","html_id":"update_area(body:AbsBody)-instance-method","name":"update_area","doc":"Updates which collision area a body is in","summary":"<p>Updates which collision area a body is in</p>","abstract":false,"args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"}],"args_string":"(body : AbsBody)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/controller.cr#L89","def":{"name":"update_area","args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"area = @space.pos_to_area(body.position.x, body.position.y)\nif area != body.area\n  @space.delete(body, body.area)\n  @space.add(body, area)\n  body.area = area\n  on_area(body)\nend\n"}}],"macros":[],"types":[]},{"html_id":"github.com/solidsmokesoftware/physicr/Index","path":"Index.html","kind":"class","full_name":"Index","name":"Index","abstract":false,"superclass":{"html_id":"github.com/solidsmokesoftware/physicr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/solidsmokesoftware/physicr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/solidsmokesoftware/physicr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"index.cr","line_number":2,"url":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/index.cr"}],"repository_name":"github.com/solidsmokesoftware/physicr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Index keeps track what number to assign to new entities.","summary":"<p>Index keeps track what number to assign to new entities.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/index.cr#L6","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"count:Int32-instance-method","html_id":"count:Int32-instance-method","name":"count","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/index.cr#L3","def":{"name":"count","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@count"}},{"id":"count=(count:Int32)-instance-method","html_id":"count=(count:Int32)-instance-method","name":"count=","doc":null,"summary":null,"abstract":false,"args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Int32"}],"args_string":"(count : Int32)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/index.cr#L3","def":{"name":"count=","args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@count = count"}},{"id":"delete(value:Int32)-instance-method","html_id":"delete(value:Int32)-instance-method","name":"delete","doc":"Gets a unique identifer for this index. Freed ids are assigned first, in first-in-last-out order.","summary":"<p>Gets a unique identifer for this index.</p>","abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int32"}],"args_string":"(value : Int32)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/index.cr#L24","def":{"name":"delete","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if value >= @count\n  @free << value\nend"}},{"id":"free:Array(Int32)-instance-method","html_id":"free:Array(Int32)-instance-method","name":"free","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Int32)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/index.cr#L4","def":{"name":"free","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Int32)","visibility":"Public","body":"@free"}},{"id":"free=(free:Array(Int32))-instance-method","html_id":"free=(free:Array(Int32))-instance-method","name":"free=","doc":null,"summary":null,"abstract":false,"args":[{"name":"free","doc":null,"default_value":"","external_name":"free","restriction":"Array(Int32)"}],"args_string":"(free : Array(Int32))","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/index.cr#L4","def":{"name":"free=","args":[{"name":"free","doc":null,"default_value":"","external_name":"free","restriction":"Array(Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@free = free"}},{"id":"get:Int32-instance-method","html_id":"get:Int32-instance-method","name":"get","doc":"Gets a unique identifer for this index. Freed ids are assigned first, in first-in-last-out order.","summary":"<p>Gets a unique identifer for this index.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/index.cr#L12","def":{"name":"get","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"if @free.size == 0\n  @count = @count + 1\n  return @count\nelse\n  value = @free[-1]\n  @free.pop\n  return value\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/solidsmokesoftware/physicr/Rect","path":"Rect.html","kind":"struct","full_name":"Rect","name":"Rect","abstract":false,"superclass":{"html_id":"github.com/solidsmokesoftware/physicr/Shape","kind":"struct","full_name":"Shape","name":"Shape"},"ancestors":[{"html_id":"github.com/solidsmokesoftware/physicr/Shape","kind":"struct","full_name":"Shape","name":"Shape"},{"html_id":"github.com/solidsmokesoftware/physicr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/solidsmokesoftware/physicr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/solidsmokesoftware/physicr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"shape.cr","line_number":9,"url":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/shape.cr"}],"repository_name":"github.com/solidsmokesoftware/physicr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"A Rectangle\nTreated as a Axis-Aligned Bounding Boxes by the Collider.","summary":"<p>A Rectangle Treated as a Axis-Aligned Bounding Boxes by the Collider.</p>","class_methods":[],"constructors":[{"id":"new(w,h)-class-method","html_id":"new(w,h)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":""},{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":""}],"args_string":"(w, h)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/shape.cr#L13","def":{"name":"new","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":""},{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(w, h)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"h:Int32-instance-method","html_id":"h:Int32-instance-method","name":"h","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/shape.cr#L11","def":{"name":"h","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@h"}},{"id":"h=(h:Int32)-instance-method","html_id":"h=(h:Int32)-instance-method","name":"h=","doc":null,"summary":null,"abstract":false,"args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"Int32"}],"args_string":"(h : Int32)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/shape.cr#L11","def":{"name":"h=","args":[{"name":"h","doc":null,"default_value":"","external_name":"h","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@h = h"}},{"id":"w:Int32-instance-method","html_id":"w:Int32-instance-method","name":"w","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/shape.cr#L10","def":{"name":"w","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@w"}},{"id":"w=(w:Int32)-instance-method","html_id":"w=(w:Int32)-instance-method","name":"w=","doc":null,"summary":null,"abstract":false,"args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"Int32"}],"args_string":"(w : Int32)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/shape.cr#L10","def":{"name":"w=","args":[{"name":"w","doc":null,"default_value":"","external_name":"w","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@w = w"}}],"macros":[],"types":[]},{"html_id":"github.com/solidsmokesoftware/physicr/Shape","path":"Shape.html","kind":"struct","full_name":"Shape","name":"Shape","abstract":true,"superclass":{"html_id":"github.com/solidsmokesoftware/physicr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/solidsmokesoftware/physicr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/solidsmokesoftware/physicr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/solidsmokesoftware/physicr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"shape.cr","line_number":4,"url":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/shape.cr"}],"repository_name":"github.com/solidsmokesoftware/physicr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/solidsmokesoftware/physicr/Circle","kind":"struct","full_name":"Circle","name":"Circle"},{"html_id":"github.com/solidsmokesoftware/physicr/Rect","kind":"struct","full_name":"Rect","name":"Rect"}],"including_types":[],"namespace":null,"doc":"Abstract Base Shape that other shapes extend from.\nShapes are simple data structures that describe the physical properties of an body to a Collider.\nNote that shapes do not have a position, thus all bodies with the same shape can use the same Shape instance","summary":"<p>Abstract Base Shape that other shapes extend from.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/shape.cr#L4","def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = allocate\nif x.responds_to?(:finalize)\n  ::GC.add_finalizer(x)\nend\nx\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/solidsmokesoftware/physicr/Space","path":"Space.html","kind":"class","full_name":"Space","name":"Space","abstract":false,"superclass":{"html_id":"github.com/solidsmokesoftware/physicr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/solidsmokesoftware/physicr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/solidsmokesoftware/physicr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"space.cr","line_number":8,"url":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/space.cr"}],"repository_name":"github.com/solidsmokesoftware/physicr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Space handles the interactions between the SpatialHash and the Collider.\nsize is how large each collision area is. You'll have to figure out the best value for your game based on object density\nand desired preformance.","summary":"<p>Space handles the interactions between the SpatialHash and the Collider.</p>","class_methods":[],"constructors":[{"id":"new(size:Int32)-class-method","html_id":"new(size:Int32)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"}],"args_string":"(size : Int32)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/space.cr#L12","def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add(body:AbsBody,area:Tuple(Int32,Int32))-instance-method","html_id":"add(body:AbsBody,area:Tuple(Int32,Int32))-instance-method","name":"add","doc":"Adds a body to the space.\nBodies are added to their collision area as well as the 8 nearest neighboring cells to handle overlap and fast moving obejcts.\nareas are a Tuple of scaled x, and y, obtained from pos_to_area(x, y)","summary":"<p>Adds a body to the space.</p>","abstract":false,"args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"},{"name":"area","doc":null,"default_value":"","external_name":"area","restriction":"Tuple(Int32, Int32)"}],"args_string":"(body : AbsBody, area : Tuple(Int32, Int32))","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/space.cr#L20","def":{"name":"add","args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"},{"name":"area","doc":null,"default_value":"","external_name":"area","restriction":"Tuple(Int32, Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x_area = area[0]\ny_area = area[1]\n@grid.add(body, {x_area - 1, y_area - 1})\n@grid.add(body, {x_area, y_area - 1})\n@grid.add(body, {x_area + 1, y_area - 1})\n@grid.add(body, {x_area - 1, y_area})\n@grid.add(body, {x_area, y_area})\n@grid.add(body, {x_area + 1, y_area})\n@grid.add(body, {x_area - 1, y_area + 1})\n@grid.add(body, {x_area, y_area + 1})\n@grid.add(body, {x_area + 1, y_area + 1})\n"}},{"id":"check(body:AbsBody,other:AbsBody):Bool-instance-method","html_id":"check(body:AbsBody,other:AbsBody):Bool-instance-method","name":"check","doc":"Check to see if two bodies are colliding with each other in abstract. Does not use the space.","summary":"<p>Check to see if two bodies are colliding with each other in abstract.</p>","abstract":false,"args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"},{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"AbsBody"}],"args_string":"(body : AbsBody, other : AbsBody) : Bool","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/space.cr#L108","def":{"name":"check","args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"},{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"AbsBody"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"if @collider.check(body.shape, body.position, other.shape, other.position)\n  return true\nelse\n  return false\nend"}},{"id":"check(body:AbsBody):Bool-instance-method","html_id":"check(body:AbsBody):Bool-instance-method","name":"check","doc":"Check to see if something is colliding with body in the space.","summary":"<p>Check to see if something is colliding with body in the space.</p>","abstract":false,"args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"}],"args_string":"(body : AbsBody) : Bool","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/space.cr#L96","def":{"name":"check","args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"(@grid.get(body.area)).each do |other|\n  if body.id != other.id\n    if check(body, other)\n      return true\n    end\n  end\nend\nreturn false\n"}},{"id":"collider:Collider-instance-method","html_id":"collider:Collider-instance-method","name":"collider","doc":"spatilhash that is the world space","summary":"<p>spatilhash that is the world space</p>","abstract":false,"args":[],"args_string":" : Collider","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/space.cr#L10","def":{"name":"collider","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Collider","visibility":"Public","body":"@collider"}},{"id":"collider=(collider:Collider)-instance-method","html_id":"collider=(collider:Collider)-instance-method","name":"collider=","doc":"spatilhash that is the world space","summary":"<p>spatilhash that is the world space</p>","abstract":false,"args":[{"name":"collider","doc":null,"default_value":"","external_name":"collider","restriction":"Collider"}],"args_string":"(collider : Collider)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/space.cr#L10","def":{"name":"collider=","args":[{"name":"collider","doc":null,"default_value":"","external_name":"collider","restriction":"Collider"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@collider = collider"}},{"id":"delete(body:AbsBody,area:Tuple(Int32,Int32))-instance-method","html_id":"delete(body:AbsBody,area:Tuple(Int32,Int32))-instance-method","name":"delete","doc":"Removes a body from the space.\nareas are a Tuple of scaled x, and y, obtained from pos_to_area(x, y)","summary":"<p>Removes a body from the space.</p>","abstract":false,"args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"},{"name":"area","doc":null,"default_value":"","external_name":"area","restriction":"Tuple(Int32, Int32)"}],"args_string":"(body : AbsBody, area : Tuple(Int32, Int32))","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/space.cr#L37","def":{"name":"delete","args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"},{"name":"area","doc":null,"default_value":"","external_name":"area","restriction":"Tuple(Int32, Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x_area = area[0]\ny_area = area[1]\n@grid.delete(body, {x_area - 1, y_area - 1})\n@grid.delete(body, {x_area, y_area - 1})\n@grid.delete(body, {x_area + 1, y_area - 1})\n@grid.delete(body, {x_area - 1, y_area})\n@grid.delete(body, {x_area, y_area})\n@grid.delete(body, {x_area + 1, y_area})\n@grid.delete(body, {x_area - 1, y_area + 1})\n@grid.delete(body, {x_area, y_area + 1})\n@grid.delete(body, {x_area + 1, y_area + 1})\n"}},{"id":"get(position:Vector,shape:Shape):Array(AbsBody)-instance-method","html_id":"get(position:Vector,shape:Shape):Array(AbsBody)-instance-method","name":"get","doc":"Gets a list of all bodies colliding with shape at position","summary":"<p>Gets a list of all bodies colliding with shape at position</p>","abstract":false,"args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Vector"},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Shape"}],"args_string":"(position : Vector, shape : Shape) : Array(AbsBody)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/space.cr#L68","def":{"name":"get","args":[{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":"Vector"},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":"Shape"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(AbsBody)","visibility":"Public","body":"area = pos_to_area(position)\ncollisions = Array(AbsBody).new\nbucket = @grid.get(area)\nbucket.each do |body|\n  if @collider.check(shape, position, body.shape, body.position)\n    collisions << body\n  end\nend\nreturn collisions\n"}},{"id":"get(area:Tuple(Int32,Int32))-instance-method","html_id":"get(area:Tuple(Int32,Int32))-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[{"name":"area","doc":null,"default_value":"","external_name":"area","restriction":"Tuple(Int32, Int32)"}],"args_string":"(area : Tuple(Int32, Int32))","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/space.cr#L63","def":{"name":"get","args":[{"name":"area","doc":null,"default_value":"","external_name":"area","restriction":"Tuple(Int32, Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return @grid.get(area)"}},{"id":"get(body:Body):Array(AbsBody)-instance-method","html_id":"get(body:Body):Array(AbsBody)-instance-method","name":"get","doc":"Get a list of all bodies colliding with body","summary":"<p>Get a list of all bodies colliding with body</p>","abstract":false,"args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"Body"}],"args_string":"(body : Body) : Array(AbsBody)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/space.cr#L82","def":{"name":"get","args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"Body"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(AbsBody)","visibility":"Public","body":"collisions = Array(AbsBody).new\n(@grid.get(body.area)).each do |other|\n  if body.id != other.id\n    if check(body, other)\n      collisions << other\n    end\n  end\nend\nreturn collisions\n"}},{"id":"grid:SpatialHash(AbsBody)-instance-method","html_id":"grid:SpatialHash(AbsBody)-instance-method","name":"grid","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : SpatialHash(AbsBody)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/space.cr#L9","def":{"name":"grid","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"SpatialHash(AbsBody)","visibility":"Public","body":"@grid"}},{"id":"grid=(grid:SpatialHash(AbsBody))-instance-method","html_id":"grid=(grid:SpatialHash(AbsBody))-instance-method","name":"grid=","doc":null,"summary":null,"abstract":false,"args":[{"name":"grid","doc":null,"default_value":"","external_name":"grid","restriction":"SpatialHash(AbsBody)"}],"args_string":"(grid : SpatialHash(AbsBody))","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/space.cr#L9","def":{"name":"grid=","args":[{"name":"grid","doc":null,"default_value":"","external_name":"grid","restriction":"SpatialHash(AbsBody)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@grid = grid"}},{"id":"has(body:AbsBody)-instance-method","html_id":"has(body:AbsBody)-instance-method","name":"has","doc":"Returns True if a body is in the space at the body's area. False if not\nNote there room for bugs here if body.area is not matched up propertly with the right collision area.\nUse Manager to move and place bodies to avoid problems","summary":"<p>Returns True if a body is in the space at the body's area.</p>","abstract":false,"args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"}],"args_string":"(body : AbsBody)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/space.cr#L55","def":{"name":"has","args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if body(in(@grid.grid[body.area]))\n  return true\nelse\n  return false\nend"}},{"id":"move(body:AbsBody,dir:Vector)-instance-method","html_id":"move(body:AbsBody,dir:Vector)-instance-method","name":"move","doc":"Moves a body. This will be move efficent than place\nNot implemented yet.","summary":"<p>Moves a body.</p>","abstract":false,"args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"},{"name":"dir","doc":null,"default_value":"","external_name":"dir","restriction":"Vector"}],"args_string":"(body : AbsBody, dir : Vector)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/space.cr#L119","def":{"name":"move","args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"},{"name":"dir","doc":null,"default_value":"","external_name":"dir","restriction":"Vector"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"place(body:AbsBody,area:::Tuple(Int32,Int32))-instance-method","html_id":"place(body:AbsBody,area:::Tuple(Int32,Int32))-instance-method","name":"place","doc":"Moves a body from one collision area to another","summary":"<p>Moves a body from one collision area to another</p>","abstract":false,"args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"},{"name":"area","doc":null,"default_value":"","external_name":"area","restriction":"::Tuple(Int32, Int32)"}],"args_string":"(body : AbsBody, area : ::Tuple(Int32, Int32))","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/space.cr#L123","def":{"name":"place","args":[{"name":"body","doc":null,"default_value":"","external_name":"body","restriction":"AbsBody"},{"name":"area","doc":null,"default_value":"","external_name":"area","restriction":"::Tuple(Int32, Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"delete(body, body.area)\nbody.area = area\nadd(body, area)\n"}}],"macros":[],"types":[]},{"html_id":"github.com/solidsmokesoftware/physicr/SpatialHash","path":"SpatialHash.html","kind":"class","full_name":"SpatialHash(T)","name":"SpatialHash","abstract":false,"superclass":{"html_id":"github.com/solidsmokesoftware/physicr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/solidsmokesoftware/physicr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/solidsmokesoftware/physicr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"spatialhash.cr","line_number":3,"url":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/spatialhash.cr"}],"repository_name":"github.com/solidsmokesoftware/physicr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"A generic spatialhash\nKeeps a bucket of objects at a given scaled position","summary":"<p>A generic spatialhash Keeps a bucket of objects at a given scaled position</p>","class_methods":[],"constructors":[{"id":"new(size:Int32)-class-method","html_id":"new(size:Int32)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"}],"args_string":"(size : Int32)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/spatialhash.cr#L7","def":{"name":"new","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = SpatialHash(T).allocate\n_.initialize(size)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add(item:T,x:Int32,y:Int32)-instance-method","html_id":"add(item:T,x:Int32,y:Int32)-instance-method","name":"add","doc":"Add an item to the grid at x, y","summary":"<p>Add an item to the grid at x, y</p>","abstract":false,"args":[{"name":"item","doc":null,"default_value":"","external_name":"item","restriction":"T"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"args_string":"(item : T, x : Int32, y : Int32)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/spatialhash.cr#L41","def":{"name":"add","args":[{"name":"item","doc":null,"default_value":"","external_name":"item","restriction":"T"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add(item, scale(x, y))"}},{"id":"add(item:T,x:Float32,y:Float32)-instance-method","html_id":"add(item:T,x:Float32,y:Float32)-instance-method","name":"add","doc":"Add an item to the grid at x, y","summary":"<p>Add an item to the grid at x, y</p>","abstract":false,"args":[{"name":"item","doc":null,"default_value":"","external_name":"item","restriction":"T"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float32"}],"args_string":"(item : T, x : Float32, y : Float32)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/spatialhash.cr#L46","def":{"name":"add","args":[{"name":"item","doc":null,"default_value":"","external_name":"item","restriction":"T"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"add(item, scale(x, y))"}},{"id":"add(item:T,area:Tuple(Int32,Int32))-instance-method","html_id":"add(item:T,area:Tuple(Int32,Int32))-instance-method","name":"add","doc":"Add an item to the grid at x, y","summary":"<p>Add an item to the grid at x, y</p>","abstract":false,"args":[{"name":"item","doc":null,"default_value":"","external_name":"item","restriction":"T"},{"name":"area","doc":null,"default_value":"","external_name":"area","restriction":"Tuple(Int32, Int32)"}],"args_string":"(item : T, area : Tuple(Int32, Int32))","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/spatialhash.cr#L51","def":{"name":"add","args":[{"name":"item","doc":null,"default_value":"","external_name":"item","restriction":"T"},{"name":"area","doc":null,"default_value":"","external_name":"area","restriction":"Tuple(Int32, Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if !(@grid.has_key?(area))\n  @grid[area] = Array(T).new\nend\n@grid[area] << item\n"}},{"id":"delete(item:T,x:Int32,y:Int32)-instance-method","html_id":"delete(item:T,x:Int32,y:Int32)-instance-method","name":"delete","doc":"Delete an item to the grid at x, y","summary":"<p>Delete an item to the grid at x, y</p>","abstract":false,"args":[{"name":"item","doc":null,"default_value":"","external_name":"item","restriction":"T"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"args_string":"(item : T, x : Int32, y : Int32)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/spatialhash.cr#L59","def":{"name":"delete","args":[{"name":"item","doc":null,"default_value":"","external_name":"item","restriction":"T"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"del(item, scale(x, y))"}},{"id":"delete(item:T,x:Float32,y:Float32)-instance-method","html_id":"delete(item:T,x:Float32,y:Float32)-instance-method","name":"delete","doc":"Delete an item to the grid at x, y","summary":"<p>Delete an item to the grid at x, y</p>","abstract":false,"args":[{"name":"item","doc":null,"default_value":"","external_name":"item","restriction":"T"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float32"}],"args_string":"(item : T, x : Float32, y : Float32)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/spatialhash.cr#L64","def":{"name":"delete","args":[{"name":"item","doc":null,"default_value":"","external_name":"item","restriction":"T"},{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"del(item, scale(x, y))"}},{"id":"delete(item:T,area:Tuple(Int32,Int32))-instance-method","html_id":"delete(item:T,area:Tuple(Int32,Int32))-instance-method","name":"delete","doc":"Delete an item to the grid at x, y","summary":"<p>Delete an item to the grid at x, y</p>","abstract":false,"args":[{"name":"item","doc":null,"default_value":"","external_name":"item","restriction":"T"},{"name":"area","doc":null,"default_value":"","external_name":"area","restriction":"Tuple(Int32, Int32)"}],"args_string":"(item : T, area : Tuple(Int32, Int32))","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/spatialhash.cr#L69","def":{"name":"delete","args":[{"name":"item","doc":null,"default_value":"","external_name":"item","restriction":"T"},{"name":"area","doc":null,"default_value":"","external_name":"area","restriction":"Tuple(Int32, Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if grid.has_key?(area)\n  @grid[area].delete(item)\n  if @grid[area].size == 0\n    @grid.delete(area)\n  end\nend"}},{"id":"get(x:Int32,y:Int32):Array(T)-instance-method","html_id":"get(x:Int32,y:Int32):Array(T)-instance-method","name":"get","doc":"Get an item","summary":"<p>Get an item</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"args_string":"(x : Int32, y : Int32) : Array(T)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/spatialhash.cr#L23","def":{"name":"get","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(T)","visibility":"Public","body":"get(scale(x, y))"}},{"id":"get(x:Float32,y:Float32):Array(T)-instance-method","html_id":"get(x:Float32,y:Float32):Array(T)-instance-method","name":"get","doc":"Get an item","summary":"<p>Get an item</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float32"}],"args_string":"(x : Float32, y : Float32) : Array(T)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/spatialhash.cr#L28","def":{"name":"get","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(T)","visibility":"Public","body":"get(scale(x, y))"}},{"id":"get(area:Tuple(Int32,Int32)):Array(T)-instance-method","html_id":"get(area:Tuple(Int32,Int32)):Array(T)-instance-method","name":"get","doc":"Get an item","summary":"<p>Get an item</p>","abstract":false,"args":[{"name":"area","doc":null,"default_value":"","external_name":"area","restriction":"Tuple(Int32, Int32)"}],"args_string":"(area : Tuple(Int32, Int32)) : Array(T)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/spatialhash.cr#L33","def":{"name":"get","args":[{"name":"area","doc":null,"default_value":"","external_name":"area","restriction":"Tuple(Int32, Int32)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(T)","visibility":"Public","body":"if !(grid.has_key?(area))\n  @grid[area] = Array(T).new\nend\nreturn @grid[area]\n"}},{"id":"grid:Hash(Tuple(Int32,Int32),Array(T))-instance-method","html_id":"grid:Hash(Tuple(Int32,Int32),Array(T))-instance-method","name":"grid","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(Tuple(Int32, Int32), Array(T))","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/spatialhash.cr#L4","def":{"name":"grid","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Hash(Tuple(Int32, Int32), Array(T))","visibility":"Public","body":"@grid"}},{"id":"grid=(grid:Hash(Tuple(Int32,Int32),Array(T)))-instance-method","html_id":"grid=(grid:Hash(Tuple(Int32,Int32),Array(T)))-instance-method","name":"grid=","doc":null,"summary":null,"abstract":false,"args":[{"name":"grid","doc":null,"default_value":"","external_name":"grid","restriction":"Hash(Tuple(Int32, Int32), Array(T))"}],"args_string":"(grid : Hash(Tuple(Int32, Int32), Array(T)))","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/spatialhash.cr#L4","def":{"name":"grid=","args":[{"name":"grid","doc":null,"default_value":"","external_name":"grid","restriction":"Hash(Tuple(Int32, Int32), Array(T))"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@grid = grid"}},{"id":"scale(x:Int32,y:Int32):Tuple(Int32,Int32)-instance-method","html_id":"scale(x:Int32,y:Int32):Tuple(Int32,Int32)-instance-method","name":"scale","doc":"Scales an x, y value to a grid cell position","summary":"<p>Scales an x, y value to a grid cell position</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"args_string":"(x : Int32, y : Int32) : Tuple(Int32, Int32)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/spatialhash.cr#L13","def":{"name":"scale","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Tuple(Int32, Int32)","visibility":"Public","body":"return {x // @size, y // @size}"}},{"id":"scale(x:Float32,y:Float32):Tuple(Int32,Int32)-instance-method","html_id":"scale(x:Float32,y:Float32):Tuple(Int32,Int32)-instance-method","name":"scale","doc":"Scales an x, y value to a grid cell position","summary":"<p>Scales an x, y value to a grid cell position</p>","abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float32"}],"args_string":"(x : Float32, y : Float32) : Tuple(Int32, Int32)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/spatialhash.cr#L18","def":{"name":"scale","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Tuple(Int32, Int32)","visibility":"Public","body":"return {x.to_i32 // @size, y.to_i32 // @size}"}},{"id":"size:Int32-instance-method","html_id":"size:Int32-instance-method","name":"size","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/spatialhash.cr#L5","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@size"}},{"id":"size=(size:Int32)-instance-method","html_id":"size=(size:Int32)-instance-method","name":"size=","doc":null,"summary":null,"abstract":false,"args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"}],"args_string":"(size : Int32)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/spatialhash.cr#L5","def":{"name":"size=","args":[{"name":"size","doc":null,"default_value":"","external_name":"size","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@size = size"}}],"macros":[],"types":[]},{"html_id":"github.com/solidsmokesoftware/physicr/StaticBody","path":"StaticBody.html","kind":"class","full_name":"StaticBody","name":"StaticBody","abstract":false,"superclass":{"html_id":"github.com/solidsmokesoftware/physicr/AbsBody","kind":"class","full_name":"AbsBody","name":"AbsBody"},"ancestors":[{"html_id":"github.com/solidsmokesoftware/physicr/AbsBody","kind":"class","full_name":"AbsBody","name":"AbsBody"},{"html_id":"github.com/solidsmokesoftware/physicr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/solidsmokesoftware/physicr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"body.cr","line_number":69,"url":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/body.cr"}],"repository_name":"github.com/solidsmokesoftware/physicr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"A body used for collisions that does not move often or require additional processing.","summary":"<p>A body used for collisions that does not move often or require additional processing.</p>","class_methods":[],"constructors":[{"id":"new(id,position,shape)-class-method","html_id":"new(id,position,shape)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":""},{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"args_string":"(id, position, shape)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/body.cr#L70","def":{"name":"new","args":[{"name":"id","doc":null,"default_value":"","external_name":"id","restriction":""},{"name":"position","doc":null,"default_value":"","external_name":"position","restriction":""},{"name":"shape","doc":null,"default_value":"","external_name":"shape","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(id, position, shape)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/solidsmokesoftware/physicr/Ticker","path":"Ticker.html","kind":"class","full_name":"Ticker","name":"Ticker","abstract":false,"superclass":{"html_id":"github.com/solidsmokesoftware/physicr/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/solidsmokesoftware/physicr/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/solidsmokesoftware/physicr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"clock.cr","line_number":14,"url":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/clock.cr"}],"repository_name":"github.com/solidsmokesoftware/physicr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"For getting monotonic time without the conversions preformed by the standard library.","summary":"<p>For getting monotonic time without the conversions preformed by the standard library.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"get:Int64-instance-method","html_id":"get:Int64-instance-method","name":"get","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int64","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/clock.cr#L15","def":{"name":"get","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int64","visibility":"Public","body":"if (LibC.clock_gettime(LibC::CLOCK_MONOTONIC, out ticks)) == 1\n  raise(Errno.new(\"clock_gettime(CLOCK_MONOTONIC)\"))\nelse\n  ticks.tv_nsec\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/solidsmokesoftware/physicr/Vector","path":"Vector.html","kind":"struct","full_name":"Vector","name":"Vector","abstract":false,"superclass":{"html_id":"github.com/solidsmokesoftware/physicr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/solidsmokesoftware/physicr/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/solidsmokesoftware/physicr/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/solidsmokesoftware/physicr/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"vector.cr","line_number":2,"url":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/vector.cr"}],"repository_name":"github.com/solidsmokesoftware/physicr","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"Vector datatype.","summary":"<p>Vector datatype.</p>","class_methods":[],"constructors":[{"id":"new(x:Float32,y:Float32)-class-method","html_id":"new(x:Float32,y:Float32)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float32"}],"args_string":"(x : Float32, y : Float32)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/vector.cr#L6","def":{"name":"new","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(x, y)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(x:Int32,y:Int32)-class-method","html_id":"new(x:Int32,y:Int32)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"args_string":"(x : Int32, y : Int32)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/vector.cr#L11","def":{"name":"new","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Int32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(x, y)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"!=(other:Vector)-instance-method","html_id":"!=(other:Vector)-instance-method","name":"!=","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vector"}],"args_string":"(other : Vector)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/vector.cr#L72","def":{"name":"!=","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vector"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (@x != other.x) && (@y != other.y)\n  return true\nelse\n  return false\nend"}},{"id":"*(scalar:Int32)-instance-method","html_id":"*(scalar:Int32)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"scalar","doc":null,"default_value":"","external_name":"scalar","restriction":"Int32"}],"args_string":"(scalar : Int32)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/vector.cr#L36","def":{"name":"*","args":[{"name":"scalar","doc":null,"default_value":"","external_name":"scalar","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return Vector.new(@x * scalar.to_f32, @y * scalar.to_f32)"}},{"id":"*(scalar:Float32)-instance-method","html_id":"*(scalar:Float32)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"scalar","doc":null,"default_value":"","external_name":"scalar","restriction":"Float32"}],"args_string":"(scalar : Float32)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/vector.cr#L40","def":{"name":"*","args":[{"name":"scalar","doc":null,"default_value":"","external_name":"scalar","restriction":"Float32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return Vector.new(@x * scalar, @y * scalar)"}},{"id":"*(scalar:Float64)-instance-method","html_id":"*(scalar:Float64)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"scalar","doc":null,"default_value":"","external_name":"scalar","restriction":"Float64"}],"args_string":"(scalar : Float64)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/vector.cr#L44","def":{"name":"*","args":[{"name":"scalar","doc":null,"default_value":"","external_name":"scalar","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return Vector.new(@x * scalar.to_f32, @y * scalar.to_f32)"}},{"id":"*(other:Vector)-instance-method","html_id":"*(other:Vector)-instance-method","name":"*","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vector"}],"args_string":"(other : Vector)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/vector.cr#L52","def":{"name":"*","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vector"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return Vector.new(@x * other.x, @y * other.y)"}},{"id":"+(other:Vector)-instance-method","html_id":"+(other:Vector)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vector"}],"args_string":"(other : Vector)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/vector.cr#L16","def":{"name":"+","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vector"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return Vector.new(@x + other.x, @y + other.y)"}},{"id":"+(scalar:Float32)-instance-method","html_id":"+(scalar:Float32)-instance-method","name":"+","doc":null,"summary":null,"abstract":false,"args":[{"name":"scalar","doc":null,"default_value":"","external_name":"scalar","restriction":"Float32"}],"args_string":"(scalar : Float32)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/vector.cr#L20","def":{"name":"+","args":[{"name":"scalar","doc":null,"default_value":"","external_name":"scalar","restriction":"Float32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return Vector.new(@x + scalar, @y + scalar)"}},{"id":"-(other:Vector)-instance-method","html_id":"-(other:Vector)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vector"}],"args_string":"(other : Vector)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/vector.cr#L28","def":{"name":"-","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vector"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return Vector.new(@x - other.x, @y - other.y)"}},{"id":"-(scalar:Float32)-instance-method","html_id":"-(scalar:Float32)-instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[{"name":"scalar","doc":null,"default_value":"","external_name":"scalar","restriction":"Float32"}],"args_string":"(scalar : Float32)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/vector.cr#L32","def":{"name":"-","args":[{"name":"scalar","doc":null,"default_value":"","external_name":"scalar","restriction":"Float32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return Vector.new(@x - scalar, @y - scalar)"}},{"id":"--instance-method","html_id":"--instance-method","name":"-","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/vector.cr#L24","def":{"name":"-","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return Vector.new(-@x, -@y)"}},{"id":"/(scalar:Float32)-instance-method","html_id":"/(scalar:Float32)-instance-method","name":"/","doc":null,"summary":null,"abstract":false,"args":[{"name":"scalar","doc":null,"default_value":"","external_name":"scalar","restriction":"Float32"}],"args_string":"(scalar : Float32)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/vector.cr#L48","def":{"name":"/","args":[{"name":"scalar","doc":null,"default_value":"","external_name":"scalar","restriction":"Float32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return Vector.new(@x // scalar, @y // scalar)"}},{"id":"(other:Vector)-instance-method","html_id":"(other:Vector)-instance-method","name":"<=>","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vector"}],"args_string":"(other : Vector)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/vector.cr#L56","def":{"name":"<=>","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vector"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (@x <=> other.x) && (@y <=> other.y)\n  return true\nelse\n  return false\nend"}},{"id":"==(other:Vector)-instance-method","html_id":"==(other:Vector)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vector"}],"args_string":"(other : Vector)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/vector.cr#L64","def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vector"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (@x == other.x) && (@y == other.y)\n  return true\nelse\n  return false\nend"}},{"id":"abs-instance-method","html_id":"abs-instance-method","name":"abs","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/vector.cr#L136","def":{"name":"abs","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return Vector.new(abs(@x), abs(@y))"}},{"id":"angle-instance-method","html_id":"angle-instance-method","name":"angle","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/vector.cr#L96","def":{"name":"angle","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return Math.atan2(@x, @y)"}},{"id":"angle(other:Vector)-instance-method","html_id":"angle(other:Vector)-instance-method","name":"angle","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vector"}],"args_string":"(other : Vector)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/vector.cr#L128","def":{"name":"angle","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vector"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return Math.atan2(cross(other), dot(other))"}},{"id":"anglepoint(other:Vector)-instance-method","html_id":"anglepoint(other:Vector)-instance-method","name":"anglepoint","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vector"}],"args_string":"(other : Vector)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/vector.cr#L132","def":{"name":"anglepoint","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vector"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return Math.atan2(@y - other.y, @x - other.x)"}},{"id":"clamp(min:Float32,max:Float32)-instance-method","html_id":"clamp(min:Float32,max:Float32)-instance-method","name":"clamp","doc":null,"summary":null,"abstract":false,"args":[{"name":"min","doc":null,"default_value":"","external_name":"min","restriction":"Float32"},{"name":"max","doc":null,"default_value":"","external_name":"max","restriction":"Float32"}],"args_string":"(min : Float32, max : Float32)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/vector.cr#L144","def":{"name":"clamp","args":[{"name":"min","doc":null,"default_value":"","external_name":"min","restriction":"Float32"},{"name":"max","doc":null,"default_value":"","external_name":"max","restriction":"Float32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if @x < min\n  x = min\nelse\n  if @x > max\n    x = max\n  else\n    x = @x\n  end\nend\nif @y < min\n  y = min\nelse\n  if @y > max\n    y = max\n  else\n    y = @x\n  end\nend\nreturn Vector.new(x, y)\n"}},{"id":"cross(other:Vector)-instance-method","html_id":"cross(other:Vector)-instance-method","name":"cross","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vector"}],"args_string":"(other : Vector)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/vector.cr#L84","def":{"name":"cross","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vector"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return (@x * other.y) - (@y * other.x)"}},{"id":"dist(x:Float32,y:Float32)-instance-method","html_id":"dist(x:Float32,y:Float32)-instance-method","name":"dist","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float32"}],"args_string":"(x : Float32, y : Float32)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/vector.cr#L120","def":{"name":"dist","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return Math.sqrt(dist_square(x, y))"}},{"id":"dist(other:Vector)-instance-method","html_id":"dist(other:Vector)-instance-method","name":"dist","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vector"}],"args_string":"(other : Vector)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/vector.cr#L124","def":{"name":"dist","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vector"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return dist(other.x, other.y)"}},{"id":"dist_square(x:Float32,y:Float32)-instance-method","html_id":"dist_square(x:Float32,y:Float32)-instance-method","name":"dist_square","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float32"}],"args_string":"(x : Float32, y : Float32)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/vector.cr#L110","def":{"name":"dist_square","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float32"},{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"xd = @x - x\nyd = @y - y\nreturn (xd * xd) + (yd * yd)\n"}},{"id":"dist_square(other:Vector)-instance-method","html_id":"dist_square(other:Vector)-instance-method","name":"dist_square","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vector"}],"args_string":"(other : Vector)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/vector.cr#L116","def":{"name":"dist_square","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vector"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return dist_square(other.x, other.y)"}},{"id":"dot(other:Vector)-instance-method","html_id":"dot(other:Vector)-instance-method","name":"dot","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vector"}],"args_string":"(other : Vector)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/vector.cr#L80","def":{"name":"dot","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vector"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return (@x * other.x) + (@y * other.y)"}},{"id":"mag-instance-method","html_id":"mag-instance-method","name":"mag","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/vector.cr#L92","def":{"name":"mag","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return Math.sqrt(mag_square)"}},{"id":"mag_square-instance-method","html_id":"mag_square-instance-method","name":"mag_square","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/vector.cr#L88","def":{"name":"mag_square","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return (@x * @x) + (@y * @y)"}},{"id":"move(other:Vector,delta:Float64)-instance-method","html_id":"move(other:Vector,delta:Float64)-instance-method","name":"move","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vector"},{"name":"delta","doc":null,"default_value":"","external_name":"delta","restriction":"Float64"}],"args_string":"(other : Vector, delta : Float64)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/vector.cr#L164","def":{"name":"move","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vector"},{"name":"delta","doc":null,"default_value":"","external_name":"delta","restriction":"Float64"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"x = @x + (other.x * delta)\ny = @y + (other.y * delta)\nreturn Vector.new(x, y)\n"}},{"id":"normal-instance-method","html_id":"normal-instance-method","name":"normal","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/vector.cr#L100","def":{"name":"normal","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"len = mag_square\nif len != 0\n  len = Math.sqrt(len)\n  return Vector.new(@x // len, @y // len)\nelse\n  return Vector.new(0, 0)\nend\n"}},{"id":"project(other:Vector)-instance-method","html_id":"project(other:Vector)-instance-method","name":"project","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vector"}],"args_string":"(other : Vector)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/vector.cr#L140","def":{"name":"project","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Vector"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"return other * ((dot(other)) / other.mag_square)"}},{"id":"to_s:String-instance-method","html_id":"to_s:String-instance-method","name":"to_s","doc":"Returns a string representation of this object.\n\nDescendants must usually **not** override this method. Instead,\nthey must override `to_s(io)`, which must append to the given\nIO object.","summary":"<p>Returns a string representation of this object.</p>","abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/vector.cr#L171","def":{"name":"to_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"return \"#{@x.to_i}:#{@y.to_i}\""}},{"id":"x:Float32-instance-method","html_id":"x:Float32-instance-method","name":"x","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Float32","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/vector.cr#L3","def":{"name":"x","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float32","visibility":"Public","body":"@x"}},{"id":"x=(x:Float32)-instance-method","html_id":"x=(x:Float32)-instance-method","name":"x=","doc":null,"summary":null,"abstract":false,"args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float32"}],"args_string":"(x : Float32)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/vector.cr#L3","def":{"name":"x=","args":[{"name":"x","doc":null,"default_value":"","external_name":"x","restriction":"Float32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@x = x"}},{"id":"y:Float32-instance-method","html_id":"y:Float32-instance-method","name":"y","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Float32","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/vector.cr#L4","def":{"name":"y","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Float32","visibility":"Public","body":"@y"}},{"id":"y=(y:Float32)-instance-method","html_id":"y=(y:Float32)-instance-method","name":"y=","doc":null,"summary":null,"abstract":false,"args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float32"}],"args_string":"(y : Float32)","source_link":"https://github.com/solidsmokesoftware/physicr/blob/61c837ac5c59b296fe2abcd59f9aaf440856402d/src/vector.cr#L4","def":{"name":"y=","args":[{"name":"y","doc":null,"default_value":"","external_name":"y","restriction":"Float32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@y = y"}}],"macros":[],"types":[]}]}})